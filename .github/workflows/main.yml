name: OpenWrt image builder for TPLink-Archer-C2-V1
on:
    push:
        tags:
            - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
        branches:
            - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Init 
      env:
        DEBIAN_FRONTEND: noninteractive
        DOWNLOAD_URL: https://downloads.openwrt.org/releases/22.03.5/targets/ramips/mt7620/openwrt-imagebuilder-22.03.5-ramips-mt7620.Linux-x86_64.tar.xz
      run: |
        sudo apt-get install build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc wget unzip python-is-python3 
        wget -O /tmp/imagebuilder.tar.xz $DOWNLOAD_URL
        xz -d /tmp/imagebuilder.tar.xz
        tar -C /tmp -xvf /tmp/imagebuilder.tar
    - name: pack image
      run: |
        cd /tmp/$(ls /tmp | grep 'openwrt-imagebuilder')
        make image PROFILE=tplink_archer-c2-v1 PACKAGES="luci luci-app-qos luci-app-upnp luci-proto-ipv6 kmod-usb-net-rndis kmod-usb-net-cdc-ncm kmod-nls-base kmod-usb-core kmod-usb-net kmod-usb-net-cdc-ether kmod-usb2 kmod-usb-net-ipheth usbmuxd libimobiledevice usbutils"
        cp -r bin /tmp
        cd /tmp; zip -v --junk-paths -r image /tmp/bin
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: /tmp/image.zip
        asset_name: image.zip
        asset_content_type: application/zip
